{"version":3,"sources":["logo.svg","components/Header.jsx","components/Search.jsx","components/ImageBlock.jsx","components/NameBlock.jsx","components/EmailBlock.jsx","components/RobotModalMenu.jsx","components/RobotCard.jsx","components/Container.jsx","components/Footer.jsx","components/AddRobot.jsx","preloader.svg","Loader.jsx","components/UserAdress.jsx","components/PhoneBlock.jsx","components/CompanyBlock.jsx","components/WebsiteBlock.jsx","components/UserModal.jsx","components/back-arrow.svg","components/ModifyModal.jsx","components/AddRobotForm.jsx","components/Page.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","props","state","className","this","title","Component","Search","placeholder","type","onChange","handleSearch","NameBlock","src","imgSrc","name","EmailBlock","formatedHREF","email","href","RobotModalMenu","onClick","event","stopPropagation","handleDismiss","handleItem","userID","RobotCard","useState","modalMenuVisible","setModalMenuVisible","handleMenuItemClick","handleMenu","option","ID","handleCardMenu","ImageBlock","context","Container","dataToPlot","map","user","id","Footer","AddRobot","handleAddRobotClick","Loader","preloader","alt","UserAddress","console","log","address","street","suite","city","zipcode","PhoneBlock","phone","phoneNumber","CompanyBlock","companyIdentity","catchPhrase","bs","WebsiteBlock","website","userWebsite","UserModal","userInfo","setUserInfo","useEffect","fetch","then","data","json","removeModal","company","ModifyModal","dismissModifyModal","robotName","onSubmit","preventDefault","robotObject","Array","from","target","elements","input","value","handleSubmit","AddForm","dismissAddModal","Page","updateRobot","robotIndex","users","method","headers","body","JSON","stringify","response","robotList","setState","retrievedUsers","isLoading","handleSearchChange","e","finderIndex","RegExp","currentSearchedData","filter","test","toLowerCase","componentDidMount","modalUser","visible","addRobot","addRobotModalVisible","handleAddRobotSubmit","newRobot","showModal","modifyModal","removeUser","manageRobot","returnModal","bool","AddRobotForm","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAAe,I,kCCeAA,E,kDAXX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,0CAInB,WACI,OACI,oBAAIC,UAAU,SAAd,SAAwBC,KAAKH,MAAMI,Y,GAP1BC,aCaNC,E,kDAZX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,0CAKnB,WACI,OACI,uBAAOM,YAAY,qBAAqBL,UAAU,QAAQM,KAAK,OAAOC,SAAYN,KAAKH,MAAMU,mB,GARpFL,a,OCMNM,EARG,SAACX,GACf,OACI,8BACI,qBAAKY,IAAMZ,EAAMa,YCGdF,EANG,SAACX,GACf,OACI,mBAAGE,UAAU,YAAb,SAA0BF,EAAMc,QCKzBC,EAPI,SAACf,GAChB,IAAIgB,EAAe,UAAYhB,EAAMiB,MACrC,OACI,mBAAGf,UAAU,YAAYgB,KAAMF,EAA/B,SAA8ChB,EAAMiB,SCW7CE,EAZQ,SAAAnB,GACnB,OACI,qBAAKE,UAAU,eAAekB,QAAS,SAACC,GAAWA,EAAMC,kBAAmBtB,EAAMuB,iBAAlF,SACI,+BACI,oBAAKH,QAAS,WAAOpB,EAAMwB,WAAW,SAAUxB,EAAMyB,QAASzB,EAAMuB,iBAArE,wBACA,oBAAKH,QAAS,WAAOpB,EAAMwB,WAAW,SAAUxB,EAAMyB,QAASzB,EAAMuB,iBAArE,sBACA,oBAAKH,QAAS,WAAOpB,EAAMwB,WAAW,SAAUxB,EAAMyB,QAASzB,EAAMuB,iBAArE,6BCgCDG,EAhCG,SAAC1B,GAAW,IAAD,EACoB2B,oBAAS,GAD7B,mBACpBC,EADoB,KACFC,EADE,KAMnBC,EAAsB,WACxBD,GAAoB,IAElBE,EAAa,SAACC,EAAQC,GACxBjC,EAAMkC,eAAeF,EAAQC,IAG7BpB,EAAS,wBAA0Bb,EAAMyB,OAC7C,OACI,sBAAKvB,UAAU,OAAOkB,QAAS,WAX/BS,GAAoB,IAWpB,UACI,cAACM,EAAD,CAAYtB,OAAUA,IACtB,cAAC,EAAD,CAAWC,KAAQd,EAAMc,OACzB,cAAC,EAAD,CAAYG,MAAQjB,EAAMiB,QAErB,SAACmB,GACE,GAAGA,EACC,OACI,cAAC,EAAD,CAAgBZ,WAAYO,EAAYR,cAAgBO,EAAqBL,OAAQzB,EAAMyB,SAHtG,CAMEG,OCjBJS,EAbG,SAACrC,GAEf,OACI,qBAAKE,UAAU,YAAf,SAEQF,EAAMsC,WAAWC,KAAI,SAACC,GAClB,OAAO,cAAC,EAAD,CAAyBf,OAAQe,EAAKC,GAAI3B,KAAM0B,EAAK1B,KAAMG,MAAOuB,EAAKvB,MAAOiB,eAAgBlC,EAAMkC,gBAApFM,EAAKC,UCEjCC,EATA,SAAC1C,GACZ,OACI,sBAAKE,UAAU,SAAf,UACI,cAAC,EAAD,CAAaE,MAAM,wBACnB,4FCCGuC,EANE,SAAA3C,GACb,OACI,oBAAGoB,QAASpB,EAAM4C,oBAAlB,uBAAiD,mBAAG1C,UAAU,iBAAb,qBCL1C,MAA0B,sCCc1B2C,EAXA,WACX,OACI,sBAAK3C,UAAU,SAAf,UACI,8BACI,qBAAKU,IAAKkC,EAAWC,IAAI,cAE7B,4DCWGC,MAhBf,SAAqBhD,GACjBiD,QAAQC,IAAIlD,EAAMmD,SADM,MAEanD,EAAMmD,QAAtCC,EAFmB,EAEnBA,OAAQC,EAFW,EAEXA,MAAOC,EAFI,EAEJA,KAAMC,EAFF,EAEEA,QAE1B,OACI,mCACI,0BAASrD,UAAU,qBAAnB,UACI,yCAAYkD,KACZ,wCAAWC,KACX,uCAAUC,KACV,2CAAcC,WCJfC,MAPf,SAAoBxD,GAChB,IAAIyD,EAAQzD,EAAM0D,YAClB,OACI,4BAAID,KCWGE,MAdf,SAAsB3D,GAAQ,IAAD,EACKA,EAAM4D,gBAA/B9C,EADoB,EACpBA,KAAM+C,EADc,EACdA,YAAaC,EADC,EACDA,GAExB,OACI,8BACI,gCACI,4BAAIhD,IACJ,4BAAI+C,IACJ,4BAAIC,UCALC,MARf,SAAsB/D,GAClB,IAAIgE,EAAUhE,EAAMiE,YAEpB,OACI,4BAAID,KCwEGE,GC/EA,IDYG,SAAClE,GAEf,IAFyB,EASK2B,mBAAS,IATd,mBASpBwC,EAToB,KASVC,EATU,KAqBzB,OAVAC,qBAAU,WACNC,MAAM,yCAA2CtE,EAAMiC,IAClDsC,MAAK,SAAAC,GACF,OAAOA,EAAKC,UAEfF,MAAK,SAAA/B,GACF4B,EAAY5B,SAIP,KAAb2B,EAEI,qBAAKjE,UAAU,QAAQkB,QArBN,SAAAC,GACrBA,EAAMC,kBACNtB,EAAM0E,eAmBF,SACI,qBAAKxE,UAAU,aAAf,SACA,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,EAAD,CAAOW,OApBP,wBAoB+Bb,EAAMiC,OAEzC,sBAAK/B,UAAU,oBAAf,UACI,gCACI,2CACA,cAAC,EAAD,CAAMY,KAAMqD,EAASrD,UAEzB,sBAAKZ,UAAU,cAAf,UACI,oDACA,cAAC,EAAD,CAAOe,MAAOkD,EAASlD,WAE3B,sBAAKf,UAAU,cAAf,UACI,oDACA,cAAC,EAAD,CAAOwD,YAAaS,EAASV,WAEjC,sBAAKvD,UAAU,gBAAf,UACI,wDACA,cAAC,EAAD,CAASiD,QAASgB,EAAShB,aAE/B,sBAAKjD,UAAU,eAAf,UACI,kDACA,cAAC,EAAD,CAAS0D,gBAAiBO,EAASQ,aAEvC,sBAAKzE,UAAU,gBAAf,UACI,+CACA,cAAC,EAAD,CAAS+D,YAAaE,EAASH,uBAU/C,KEzCGY,EA9BK,SAAA5E,GAehB,OACI,qBAAKE,UAAU,iBAAiBkB,QAAS,SAACC,GAAWA,EAAMC,kBAAmBtB,EAAM6E,sBAApF,SACI,sBAAK3E,UAAU,aAAakB,QAAU,SAAAC,GAAUA,EAAMC,mBAAtD,UACI,0DAA0BtB,EAAM8E,aAChC,uBAAMC,SAjBG,SAAC1D,GAClBA,EAAM2D,iBACNhF,EAAM6E,qBACN,IAAII,EAAc,GAClBC,MAAMC,KAAK9D,EAAM+D,OAAOC,UAAU9C,KAAI,SAAA+C,GACjB,KAAdA,EAAMxE,OACLmE,EAAYK,EAAMxE,MAAQwE,EAAMC,UAGxCvF,EAAMwF,aAAaP,EAAajF,EAAMiC,KAQ9B,UACI,uBAAOzB,KAAK,OAAOM,KAAK,OAAOP,YAAY,oBAC3C,uBAAOC,KAAK,OAAOM,KAAK,QAAQP,YAAY,iBAC5C,uBAAOC,KAAK,OAAOM,KAAK,UAAUP,YAAY,mBAC9C,uBAAOC,KAAK,SAAS+E,MAAM,sBCIhCE,EA3BC,SAAAzF,GAEZ,IAAIiF,EAAc,GAWlB,OACI,qBAAK/E,UAAU,eAAekB,QAAS,SAACC,GAAWA,EAAMC,kBAAmBtB,EAAM0F,mBAAlF,SACI,qBAAKxF,UAAU,aAAakB,QAAU,SAAAC,GAAUA,EAAMC,mBAAtD,SACI,uBAAMyD,SAZG,SAAA1D,GACjBA,EAAM2D,iBACNE,MAAMC,KAAK9D,EAAM+D,OAAOC,UAAU9C,KAAI,SAAA+C,GACf,KAAfA,EAAMxE,OACVmE,EAAYK,EAAMxE,MAAQwE,EAAMC,UAGpCvF,EAAMwF,aAAaP,IAKX,UACA,uBAAOzE,KAAK,OAAOM,KAAK,OAAOP,YAAY,oBAC3C,uBAAOC,KAAK,OAAOM,KAAK,QAAQP,YAAY,iBAC5C,uBAAOC,KAAK,OAAOM,KAAK,UAAUP,YAAY,mBAC9C,uBAAOC,KAAK,SAAS+E,MAAM,oBC8P5BI,E,kDAvQX,WAAY3F,GAAQ,IAAD,8BACf,cAAMA,IAwBV4F,YAAc,SAACX,EAAaY,GACX,EAAK5F,MAAM6F,MACjBD,GAAcZ,EACrBhC,QAAQC,IAAI2C,GAEZvB,MAAM,6CAA8C,CAC5CyB,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,8BAA+B,KAEnCC,KAAMC,KAAKC,UAAUlB,KAExBV,MAAK,SAAC6B,GACH,OAAOA,EAAS3B,UAEnBF,MAAK,SAAC8B,GACHpD,QAAQC,IAAImD,GACZ,EAAKC,SAAU,CACXR,MAAOO,EACPE,eAAgBF,EAChBG,WAAY,IAEpB,EAAK3B,yBAjDM,EA0DnB4B,mBAAqB,SAAAC,GACjB,IAAIC,EAAc,IAAIC,OAAOF,EAAEtB,OAAOG,MAAO,MACzCsB,EAAsB,EAAK5G,MAAM6F,MAAMgB,QAAO,SAAAtE,GAC9C,OAAOmE,EAAYI,KAAKvE,EAAK1B,KAAKkG,kBAGtC,EAAKV,SAAS,CACVC,eAAgBM,KAjEL,EAqEnBI,kBAAoB,WAChB3C,MAAM,8CACDC,MAAK,SAAC6B,GACH,OAAOA,EAAS3B,UAEnBF,MAAK,SAAC8B,GAIH,EAAKC,SAAU,CACXR,MAAOO,EACPE,eAAgBF,EAChBG,WAAY,QAjFT,EAuFnB9B,YAAc,WACV,EAAK4B,SAAS,CACVY,UAAW,CACPC,SAAS,MA1FF,EA+FnBC,SAAW,WACP,EAAKd,SAAS,CACVe,sBAAsB,KAjGX,EAqGnB3B,gBAAkB,WACd,EAAKY,SAAS,CACVe,sBAAsB,KAvGX,EA2GnBC,qBAAuB,SAACC,GAwBhB,EAAK7B,mBAnIM,EAkJnB8B,UAAW,SAAC/F,GAgBR,EAAK6E,SAAS,CACVY,UAAW,CACPzE,GAAIhB,EACJ0F,SAAS,MArKF,EA0KnBtC,mBAAqB,WACjB,EAAKyB,SAAS,CACVmB,YAAa,CACTN,SAAS,MA7KF,EAkLnBO,WAAa,SAAAjF,KAlLM,EAuMnBkF,YAAc,SAAC3F,EAAQC,GACnBgB,QAAQC,IAAIjB,GACE,UAAVD,EACA,EAAKwF,UAAUvF,GAEE,UAAVD,EACP,EAAK0F,WAAWzF,GAEC,UAAVD,GACP,EAAKsE,SAAS,CACVmB,YAAa,CACTN,SAAS,EACTtB,WAAY5D,EAAK,MAnNd,EAyNnB2F,YAAc,SAACC,GACX,GAAIA,EACA,OAAO,cAAC,EAAD,CAAW5F,GAAI,EAAKhC,MAAMiH,UAAUzE,GAAIiC,YAAe,EAAKA,eAzNvE,EAAKzE,MAAQ,CACT6F,MAAO,GACPS,eAAgB,GAChBC,WAAW,EACXU,UAAW,CACPC,SAAS,EACT1E,GAAI,GAER4E,sBAAsB,EACtBI,YAAa,CACTN,SAAS,EACTtB,WAAY,IAbL,E,0CA+NnB,WAAU,IAAD,OACL,OAAI1F,KAAKF,MAAMuG,UACJ,cAAC,EAAD,IAGH,sBAAKtG,UAAU,OAAf,UACI,sBAAKA,UAAU,SAAf,UACI,cAAC,EAAD,CAAQE,MAAM,oBACd,sBAAKF,UAAU,YAAf,UACI,cAAC,EAAD,CAAQQ,aAAgBP,KAAKsG,qBAC7B,cAAC,EAAD,CAAa7D,oBAAuBzC,KAAKiH,iBAGjD,cAAC,EAAD,CAAW9E,WAAanC,KAAKF,MAAMsG,eAAgBrE,eAAgB/B,KAAKwH,cACxE,cAAC,EAAD,IAEGxH,KAAKyH,YAAYzH,KAAKF,MAAMiH,UAAUC,SAIpC,SAAC/E,GACE,GAAIA,EACA,OAAO,cAAC0F,EAAD,CAActC,aAAc,EAAK8B,qBAAsB5B,gBAAiB,EAAKA,kBAF3F,CAIEvF,KAAKF,MAAMoH,sBAGb,SAACjF,GACE,GAAIA,EACA,OAAO,cAAC,EAAD,CAAaoD,aAAc,EAAKI,YAAa3D,GAAI,EAAKhC,MAAMwH,YAAY5B,WAAYf,UAAW,EAAK7E,MAAM6F,MAAM,EAAK7F,MAAMwH,YAAY5B,YAAY/E,KAAM+D,mBAAuB,EAAKA,qBAFnM,CAIE1E,KAAKF,MAAMwH,YAAYN,gB,GA/P/B9G,aCFJ0H,MANf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.dd7b130d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport React, {Component} from 'react';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n    render() {\n        return (\n            <h1 className=\"header\">{this.props.title}</h1>\n        );\n    }\n}\n\nexport default Header;","\nimport React, {Component} from 'react';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n\n    render() {\n        return (\n            <input placeholder=\"Nom de votre robot\" className=\"input\" type=\"text\" onChange = {this.props.handleSearch}/>\n        );\n    }\n}\n\nexport default Search;","\nconst NameBlock = (props) => {\n    return (\n        <div>\n            <img src= {props.imgSrc} />\n        </div>\n    )\n}\n\nexport default NameBlock;\n","\nconst NameBlock = (props) => {\n    return (\n        <p className=\"user-name\">{props.name}</p>\n    )\n}\n\nexport default NameBlock;\n","\nconst EmailBlock = (props) => {\n    let formatedHREF = \"mailto:\" + props.email;\n    return (\n        <a className=\"user-emai\" href={formatedHREF}>{props.email}</a>\n    );\n};\n\nexport default EmailBlock;\n","\nimport React from 'react';\n\nconst RobotModalMenu = props => {\n    return (\n        <div className=\"overlay-menu\" onClick={(event) => {event.stopPropagation(); props.handleDismiss()}}>\n            <ul>\n                <li  onClick={() => {props.handleItem('detail', props.userID); props.handleDismiss()}}>Détails</li>\n                <li  onClick={() => {props.handleItem('modify', props.userID); props.handleDismiss()}}>Modifier</li>\n                <li  onClick={() => {props.handleItem('delete', props.userID); props.handleDismiss()}}>Supprimer</li>\n            </ul>\n        </div>\n    );\n}\n\nexport default RobotModalMenu;\n","\nimport React, {Component} from 'react';\n\nimport ImageBlock from './ImageBlock';\nimport NameBlock from './NameBlock';\nimport EmailBlock from './EmailBlock';\nimport RobotModalMenu from './RobotModalMenu';\nimport { useState } from 'react';\n\nconst RobotCard = (props) => {\n    let [modalMenuVisible, setModalMenuVisible] =useState(false);\n\n    const handleCardClick = () => {\n        setModalMenuVisible(true);\n    }\n    const handleMenuItemClick = () => {\n        setModalMenuVisible(false);\n    }\n    const handleMenu = (option, ID) => {\n        props.handleCardMenu(option, ID);\n    }\n\n    let imgSrc = 'https://robohash.org/' + props.userID;\n    return (\n        <div className=\"card\" onClick={()=>{handleCardClick()}}>\n            <ImageBlock imgSrc = {imgSrc} />\n            <NameBlock name = {props.name} />\n            <EmailBlock email= {props.email} />\n            {\n                ((context) => {\n                    if(context) {\n                        return(\n                            <RobotModalMenu handleItem={handleMenu} handleDismiss={ handleMenuItemClick} userID={props.userID}/>\n                        );\n                    }\n                })(modalMenuVisible)\n            }\n        </div>\n    );\n}\n\nexport default RobotCard;","\nimport React, {Component} from 'react';\nimport RobotCard from './RobotCard';\n\n\nconst Container = (props) => {\n\n    return (\n        <div className=\"container\">\n            {\n                props.dataToPlot.map((user) => {\n                    return <RobotCard key={user.id} userID={user.id} name={user.name} email={user.email} handleCardMenu={props.handleCardMenu}/>\n                })\n            }\n        </div>\n    );\n}\n\nexport default Container;\n","\nimport React from 'react';\nimport FootHeader from './Header';\n\nconst Footer = (props) => {\n    return (\n        <div className=\"footer\">\n            <FootHeader  title=\"MES AMIS ROBOTS Ltd\"/>\n            <p>All rights reserved &copy; Cirhuza Software Servives 2021</p>\n        </div>\n    )\n}\n\nexport default Footer;","\nimport React from 'react';\n\nconst AddRobot = props => {\n    return (\n        <a onClick={props.handleAddRobotClick}>ADD ROBOT <i className=\"material-icons\">add</i></a>\n    );\n}\n\nexport default AddRobot;","export default __webpack_public_path__ + \"static/media/preloader.9133b497.svg\";","import React from 'react';\nimport preloader from './preloader.svg';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <div>\n                <img src={preloader} alt=\"loading\"/>\n            </div>\n            <p>Chargement en cours ...</p>\n        </div>\n    )\n}\n\nexport default Loader","\n\nimport React from 'react';\n\nfunction UserAddress(props) {\n    console.log(props.address);\n    let {street, suite, city, zipcode} = props.address;\n\n    return(\n        <>\n            <address className=\"addres-credentials\">\n                <p>Street: {street}</p>\n                <p>Suite: {suite}</p>\n                <p>City: {city}</p>\n                <p>Zip Code: {zipcode}</p>\n            </address>\n        </>\n    );\n};\n\nexport default UserAddress;","\nimport React from 'react';\n\nfunction PhoneBlock(props) {\n    let phone = props.phoneNumber;\n    return (\n        <p>{phone}</p>\n    )\n}\n\nexport default PhoneBlock;","\nimport React from 'react';\n\nfunction CompanyBlock(props) {\n    let {name, catchPhrase, bs} = props.companyIdentity;\n\n    return (\n        <div>\n            <div>\n                <p>{name}</p>\n                <p>{catchPhrase}</p>\n                <p>{bs}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default CompanyBlock;\n","\nimport React from 'react';\n\nfunction WebsiteBlock(props) {\n    let website = props.userWebsite;\n\n    return (\n        <p>{website}</p>\n    );\n};\n\nexport default WebsiteBlock;\n","\nimport React, { useState } from 'react';\nimport Name from './NameBlock';\nimport Email from './EmailBlock';\nimport Image from './ImageBlock';\nimport Address from './UserAdress';\nimport Phone from './PhoneBlock';\nimport Company from './CompanyBlock';\nimport Website from './WebsiteBlock';\nimport arrowBack from './back-arrow.svg'\nimport { useEffect } from 'react';\n\nconst UserModal = (props) => {\n\n    let handleModalDismiss = event => {\n        event.stopPropagation();\n        props.removeModal();\n    }\n\n    let imgPaceholder = 'https://robohash.org/';\n\n    let [userInfo, setUserInfo] = useState('');\n\n    useEffect(() => {\n        fetch(\"http://localhost:8800/api/robot-users/\" + props.ID)\n            .then(data => {\n                return data.json();\n            })\n            .then(user => {\n                setUserInfo(user)\n            })\n    })\n\n    if (userInfo !== \"\") {\n        return (\n            <div className=\"modal\" onClick={handleModalDismiss}>\n                <div className=\"user-modal\">\n                <div className=\"info-block\">\n                    <div className=\"image-block\">\n                        <Image imgSrc={imgPaceholder + props.ID}/>\n                    </div>\n                    <div className=\"robot-credentials\">\n                        <div>\n                            <h3>User name</h3>\n                            <Name name={userInfo.name}/>\n                        </div>\n                        <div className=\"email-block\">\n                            <h3>User email address</h3>\n                            <Email email={userInfo.email}/>\n                        </div>\n                        <div className=\"phone-block\">\n                            <h3>User pnone number:</h3>\n                            <Phone phoneNumber={userInfo.phone}/>\n                        </div>\n                        <div className=\"address-block\">\n                            <h3>User complete address:</h3>\n                            <Address address={userInfo.address}/>\n                        </div>\n                        <div className=\"companyBlock\">\n                            <h3>Company details:</h3>\n                            <Company companyIdentity={userInfo.company}/>\n                        </div>\n                        <div className=\"website-block\">\n                            <h3>User website:</h3>\n                            <Website userWebsite={userInfo.website}/>\n                        </div>\n                    </div>\n                </div>\n    \n            </div>\n            </div>\n        );\n    } else {\n        return (\n            ''\n        );\n    }\n}\n\nexport default UserModal;\n","export default __webpack_public_path__ + \"static/media/back-arrow.f57fba0e.svg\";","\nimport React from 'react';\n\nconst ModifyModal = props => {\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        props.dismissModifyModal()\n        let robotObject = {}\n        Array.from(event.target.elements).map(input => {\n            if(input.name !==\"\") {\n                robotObject[input.name] = input.value;\n            }\n        });\n        props.handleSubmit(robotObject, props.ID);\n\n    }\n\n    return (\n        <div className=\"overlay-modify\" onClick={(event) => {event.stopPropagation(); props.dismissModifyModal()}}>\n            <div className=\"modal-form\" onClick= {event => {event.stopPropagation()}}>\n                <h3>Mise à jour du robot {props.robotName}</h3>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" name=\"name\" placeholder=\"Le nom du robot\"/>\n                    <input type=\"text\" name=\"email\" placeholder=\"Votre e-mail\"/>\n                    <input type=\"text\" name=\"website\" placeholder=\"Votre site web\"/>\n                    <input type=\"submit\" value=\"Modifier\"/>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ModifyModal;\n","\nimport React from 'react';\n\nconst AddForm = props => {\n\n    let robotObject = {};\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        Array.from(event.target.elements).map(input => {\n            if (input.name !== \"\") {\n            robotObject[input.name] = input.value;\n            }\n        });\n        props.handleSubmit(robotObject);\n    }\n    return(\n        <div className=\"overlay-form\" onClick={(event) => {event.stopPropagation(); props.dismissAddModal()}}>\n            <div className=\"modal-form\" onClick= {event => {event.stopPropagation()}}>\n                <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"name\" placeholder=\"Le nom du robot\"/>\n                <input type=\"text\" name=\"email\" placeholder=\"Votre e-mail\"/>\n                <input type=\"text\" name=\"website\" placeholder=\"Votre site web\"/>\n                <input type=\"submit\" value=\"Ajouter\"/>\n            </form>\n        </div>\n        </div>\n    );\n} \n\nexport default AddForm;","\nimport React, {Component} from 'react';\n\nimport Header from './Header';\nimport Search from './Search';\nimport Container from './Container';\nimport Footer from './Footer';\nimport AddRobotBtn from './AddRobot';\nimport Loader from '../Loader';\nimport UserModal from './UserModal';\nimport ModifyModal from '../components/ModifyModal';\nimport AddRobotForm from './AddRobotForm';\n\nclass Page extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            retrievedUsers: [],\n            isLoading: true,\n            modalUser: {\n                visible: false,\n                id: 0\n            },\n            addRobotModalVisible: false,\n            modifyModal: {\n                visible: false,\n                robotIndex: 0\n            }\n        };\n    }\n\n    // handleCardClick = (userID) => {\n    //     let userData = this.state.users.filter(user => {\n    //         return user.id === userID;\n    //     });\n    //     this.setState({modalUser: userData});\n    // }\n\n    updateRobot = (robotObject, robotIndex)=> {\n        let robots = this.state.users;\n        robots[robotIndex] = robotObject;\n        console.log(robotIndex);\n\n        fetch(`https://jsonplaceholder.typicode.com/users`, { \n                method: 'PUT', \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                body: JSON.stringify(robotObject),\n            })\n            .then((response) => {\n                return response.json();\n            })\n            .then((robotList) => {\n                console.log(robotList);\n                this.setState( {\n                    users: robotList,\n                    retrievedUsers: robotList,\n                    isLoading : false,\n                });\n            this.dismissModifyModal();\n        });\n\n        // this.setState({\n        //     users: robots,\n        // })\n        // this.dismissModifyModal();\n    }\n\n    handleSearchChange = e => {\n        let finderIndex = new RegExp(e.target.value, \"gi\");\n        let currentSearchedData = this.state.users.filter(user => {\n            return finderIndex.test(user.name.toLowerCase())\n        });\n\n        this.setState({\n            retrievedUsers: currentSearchedData,\n        });\n    }\n\n    componentDidMount = () => {\n        fetch(`https://jsonplaceholder.typicode.com/users`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((robotList) => {\n                // robotList = robotList.map(({id, name, email}) => {\n                //     return {id, name, email};\n                // })\n                this.setState( {\n                    users: robotList,\n                    retrievedUsers: robotList,\n                    isLoading : false,\n                });\n        });\n\n    }\n\n    removeModal = () => {\n        this.setState({\n            modalUser: {\n                visible: false\n            },\n        });\n    };\n\n    addRobot = () => {\n        this.setState({\n            addRobotModalVisible: true,\n        })\n    }\n\n    dismissAddModal = () => {\n        this.setState({\n            addRobotModalVisible: false,\n        })\n    }\n\n    handleAddRobotSubmit = (newRobot) => {\n\n        // fetch(`http://localhost:8800/api/robot-users/`, { \n        //         method: 'POST', \n        //         headers: {\n        //             'Accept': 'application/json',\n        //             'Content-Type': 'application/json',\n        //             'Access-Control-Allow-Origin': '*'\n        //         },\n        //         body: JSON.stringify(newRobot),\n        //     })\n        //     .then((response) => {\n        //         return response.json();\n        //     })\n        //     .then((usersList) => {\n        //         this.setState( {\n        //             users: usersList,\n        //             retrievedUsers: usersList,\n        //             isLoading : false,\n        //         });\n        //         console.log(this.state.users);\n        //     })\n\n\n            this.dismissAddModal();\n\n        // console.log(this.state.retrievedUsers.length);\n\n        // newRobot[\"id\"] = this.state.retrievedUsers.length;\n        // let newRobots = this.state.users;\n        // newRobots.push(newRobot);\n        // console.log(newRobots.length);\n        // this.setState({\n        //     retrievedUsers: newRobots,\n        //     addRobotModalVisible: false,\n        // })\n        // console.log(this.state.retrievedUsers.length);\n    }\n\n    showModal= (userID) => {\n        // console.log(userID);\n        // let userData = this.state.users.filter(user => {\n        //     //console.log(user.id);\n        //     return user.id === userID;\n        // });\n\n        // let updateModal = async () => {\n        //     await this.setState({\n        //          modalUser : userData,\n        //          userModalVisible: true,\n        //     });\n        // };\n        // updateModal().then(() => {\n        //     console.log(this.state.modalUser);\n        // });\n        this.setState({\n            modalUser: {\n                id: userID,\n                visible: true\n            }\n        })\n    };\n\n    dismissModifyModal = () => {\n        this.setState({\n            modifyModal: {\n                visible: false,\n            }\n        })\n    }\n\n    removeUser = id => {\n        // fetch(`http://localhost:8800/api/robot-users/${id}`, { \n        //         method: 'DELETE', \n        //         headers: {\n        //             'Accept': 'application/json',\n        //             'Content-Type': 'application/json',\n        //             'Access-Control-Allow-Origin': '*'\n        //         },\n        //     })\n        //     .then((response) => {\n        //         return response.json();\n        //     })\n        //     .then((usersList) => {\n        //         this.setState( {\n        //             users: usersList,\n        //             retrievedUsers: usersList,\n        //             isLoading : false,\n        //         });\n        //     })\n    }\n\n    manageRobot = (option, ID) => {\n        console.log(ID);\n        if (option == 'detail') {\n            this.showModal(ID);\n\n        } else if (option == 'delete') {\n            this.removeUser(ID);\n\n        } else if (option == \"modify\") {\n            this.setState({\n                modifyModal: {\n                    visible: true,\n                    robotIndex: ID - 1\n                }\n            });\n        }\n    }\n\n    returnModal = (bool) => {\n        if (bool) {\n            return <UserModal ID={this.state.modalUser.id} removeModal = {this.removeModal}/>;\n        }\n    }\n    \n    render() {\n        if (this.state.isLoading){\n            return <Loader />\n        } else {\n            return (\n                <div className=\"page\">\n                    <div className=\"appbar\">\n                        <Header title=\"MES AMIS ROBOTS\"/>\n                        <div className=\"head-form\">\n                            <Search handleSearch = {this.handleSearchChange}/>\n                            <AddRobotBtn handleAddRobotClick = {this.addRobot}/>\n                        </div>\n                    </div>\n                    <Container dataToPlot= {this.state.retrievedUsers} handleCardMenu={this.manageRobot}/>\n                    <Footer/>\n                    {\n                       this.returnModal(this.state.modalUser.visible)\n                    }\n\n                    {\n                        ((context) => {\n                            if (context) {\n                                return <AddRobotForm handleSubmit={this.handleAddRobotSubmit} dismissAddModal={this.dismissAddModal}/>\n                            }\n                        })(this.state.addRobotModalVisible)\n                    }\n                    {\n                        ((context) => {\n                            if (context) {\n                                return <ModifyModal handleSubmit={this.updateRobot} ID={this.state.modifyModal.robotIndex} robotName={this.state.users[this.state.modifyModal.robotIndex].name} dismissModifyModal = { this.dismissModifyModal}/>\n                            }\n                        })(this.state.modifyModal.visible)\n                    }\n                    \n                </div>\n            );\n        }\n    };\n}\n\nexport default Page;","import logo from './logo.svg';\nimport './App.scss';\n\nimport Page from './components/Page'\n\nfunction App() {\n  return (\n    <Page />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}